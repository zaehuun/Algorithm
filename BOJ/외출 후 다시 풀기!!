package com.example.demo;

import lombok.Builder;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int K = Integer.parseInt(br.readLine());
		while(K != 0){
			StringTokenizer st = new StringTokenizer(br.readLine());
			int v = Integer.parseInt(st.nextToken());
			int e = Integer.parseInt(st.nextToken());

			List<Integer>[] list = new ArrayList[v];
			for(int i = 0; i < v; i++)
				list[i] = new ArrayList<>();

			for(int i = 0; i < e; i++){
				st = new StringTokenizer(br.readLine());
				int start = Integer.parseInt(st.nextToken());
				int end = Integer.parseInt(st.nextToken());

				list[start-1].add(end-1);
				list[end-1].add(start-1);
			}

			Queue<Integer> que = new LinkedList<>();
			Set<Integer> set = new HashSet<>();
			int[] visit = new int[v];

			for(int i = 0; i < v; i++) {
				if (visit[i] != 0) continue;
				visit[i] = i + 1;
				que.offer(i);
				set.add(i + 1);

				while (!que.isEmpty()) {
					int idx = que.poll();

					for (int target : list[idx]) {
						if (visit[target] == 0) {
							que.offer(target);
							visit[target] = i + 1;

						} else break;

					}
				}
			}
			if(set.size() == 2) System.out.println("YES");
			else System.out.println("NO");
			K--;
		}



	}
}


